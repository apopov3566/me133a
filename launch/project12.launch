<launch>
  <!-- You can overwrite these arguments from the commmand line. -->

  <!-- These are arguments for Gazebo.  Select a world, for example:
    <arg name="world_name" default="$(find project)/worlds/stuff.world"/>
    <arg name="world_name" default="$(find project)/worlds/slowtime.world"/>
    <arg name="world_name" default="$(find project)/worlds/realtime.world"/>
  -->
  <arg name="paused"     default="true"/>
  <arg name="world_name" default="$(find project)/worlds/slowtime.world"/>

  <!-- URDF file parameter. -->
  <arg name="model" default="$(find project)/urdf/twelvedof_l.urdf"/>
  <arg name="canvas" default="$(find project)/urdf/canvas.urdf"/>

  <!-- The control parameters, stored in the YAML file.  -->
  <arg name="control_parameters"
       default="$(find project)/config/twelvedof_control_parameters.yaml"/>


  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" textfile="$(arg model)"/>
  <param name="canvas_description" textfile="$(arg canvas)"/>

  <!-- Load the controller parameters -->
  <rosparam command="load" file="$(arg control_parameters)"/>


  <!-- Launch Gazebo with the given world, via the standard   -->
  <!-- empty_world launch file to inherit the other defaults. -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"   value="$(arg world_name)"/>
    <arg name="paused"       value="$(arg paused)"/>
    <arg name="gui"          value="true"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless"     value="false"/>
    <arg name="debug"        value="false"/>
  </include>

  <!-- Service call to gazebo_ros to spawn a URDF robot -->
  <node pkg ="gazebo_ros"
	type="spawn_model"
	name="robot_spawner"
	respawn="false"
	output="screen"
	args="-urdf -model twelvedof -param robot_description"/>

  <!-- Service call to gazebo_ros to spawn a canvas model -->
  <node pkg ="gazebo_ros"
	type="spawn_model"
	name="canvas_spawner"
	respawn="false"
	output="screen"
	args="-urdf -model canvas -param canvas_description -x 0.3 -y 0.5 -z 1.1 -Y 1.5708"/>

  <node pkg ="gazebo_ros"
	type="spawn_model"
	name="canvas_spawner_2"
	respawn="false"
	output="screen"
	args="-urdf -model canvas2 -param canvas_description -x -0.8 -y 1.5 -z 1.1 -Y 3.14159"/>

  <!-- Load the controllers. -->
  <node pkg ="controller_manager"
	type="spawner"
	name="controller_spawner"
	respawn="false"
	output="screen"
	ns="/twelvedof"
	args="joint_state_publisher j1_pd_control j2_pd_control j3_pd_control j4_pd_control j5_pd_control j6_pd_control j7_pd_control j8_pd_control j9_pd_control j10_pd_control j11_pd_control j12_pd_control"/>

  <!-- Start the trajectory demo -->
  <node pkg ="project"
    type="trajectory12.py"
	name="trajectory"
	output="screen"
	required="true">
  </node>

  <node pkg ="project"
  	type="draw12_controller.py"
	name="controller"
	output="screen"
	required="true">
  </node>

  <node pkg ="project"
  	type="tipdraw"
	name="tipdraw"
	output="screen"
	required="true">
  </node>

</launch>
